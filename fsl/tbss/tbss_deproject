#!/bin/sh

#   tbss_deproject - take skeleton-space voxels back to all_FA space and then, optionally, native space
#
#   Stephen Smith, FMRIB Image Analysis Group
#
#   Copyright (C) 2007-2008 University of Oxford
#
#   Part of FSL - FMRIB's Software Library
#   http://www.fmrib.ox.ac.uk/fsl
#   fsl@fmrib.ox.ac.uk
#   
#   Developed at FMRIB (Oxford Centre for Functional Magnetic Resonance
#   Imaging of the Brain), Department of Clinical Neurology, Oxford
#   University, Oxford, UK
#   
#   
#   LICENCE
#   
#   FMRIB Software Library, Release 4.0 (c) 2007, The University of
#   Oxford (the "Software")
#   
#   The Software remains the property of the University of Oxford ("the
#   University").
#   
#   The Software is distributed "AS IS" under this Licence solely for
#   non-commercial use in the hope that it will be useful, but in order
#   that the University as a charitable foundation protects its assets for
#   the benefit of its educational and research purposes, the University
#   makes clear that no condition is made or to be implied, nor is any
#   warranty given or to be implied, as to the accuracy of the Software,
#   or that it will be suitable for any particular purpose or for use
#   under any specific conditions. Furthermore, the University disclaims
#   all responsibility for the use which is made of the Software. It
#   further disclaims any liability for the outcomes arising from using
#   the Software.
#   
#   The Licensee agrees to indemnify the University and hold the
#   University harmless from and against any and all claims, damages and
#   liabilities asserted by third parties (including claims for
#   negligence) which arise directly or indirectly from the use of the
#   Software or the sale of any products based on the Software.
#   
#   No part of the Software may be reproduced, modified, transmitted or
#   transferred in any form or by any means, electronic or mechanical,
#   without the express permission of the University. The permission of
#   the University is not required if the said reproduction, modification,
#   transmission or transference is done without financial return, the
#   conditions of this Licence are imposed upon the receiver of the
#   product, and all original and amended source code is included in any
#   transmitted product. You may be held legally responsible for any
#   copyright infringement that is caused or encouraged by your failure to
#   abide by these terms and conditions.
#   
#   You are not permitted under this Licence to use this Software
#   commercially. Use for which any financial return is received shall be
#   defined as commercial use, and includes (1) integration of all or part
#   of the source code or the Software into a product for sale or license
#   by or on behalf of Licensee to third parties or (2) use of the
#   Software or any derivative of it for research with the final aim of
#   developing software products for sale or license to a third party or
#   (3) use of the Software or any derivative of it for research with the
#   final aim of developing non-software products for sale or license to a
#   third party, or (4) use of the Software to provide any service to an
#   external organisation for which payment is received. If you are
#   interested in using the Software commercially, please contact Isis
#   Innovation Limited ("Isis"), the technology transfer company of the
#   University, to negotiate a licence. Contact details are:
#   innovation@isis.ox.ac.uk quoting reference DE/1112.

Usage() {
    echo ""
    echo "Usage: tbss_deproject <skeleton-space-input-image> <final-space> [-n]"
    echo ""
    echo "Final-space options:"
    echo "1: just deproject <skeleton-space-input-image> onto the space of each subject in all_FA (output in \"stats\" directory)"
    echo "2: do the above and also invert nonlinear warping, to get back to subjects' native space in FA (outputs in \"FA\" directory)"
    echo ""
    echo "-n : assume that <skeleton-space-input-image> contains one or more integer index numbers and ensure that those exact values are deprojected without being changed by interpolations"
    echo ""
    exit 1
}

[ "$2" = "" ] && Usage
IN=`${FSLDIR}/bin/remove_ext $1`
SPACE=$2
interp=tri
if [ _$3 != _ ] ; then
    interp="nn"
fi

echo "de-projecting <skeleton-space-image> into all_FA (nonlinearly aligned) subject space"
echo "output from stage 1 deprojection will be ${IN}_to_all_FA"
$FSLDIR/bin/tbss_skeleton -i mean_FA -p `cat thresh.txt` mean_FA_skeleton_mask_dst $FSLDIR/data/standard/LowerCingulum_1mm all_FA ${IN}_tmp -D $IN
$FSLDIR/bin/immv ${IN}_tmp_deprojected ${IN}_to_all_FA
$FSLDIR/bin/imrm ${IN}_tmp
echo "de-projection done"

if [ $SPACE -ge 2 ] ; then

    echo "now creating inverse warp fields..."
    $FSLDIR/bin/fslsplit ${IN}_to_all_FA ${IN}_to_all_FA_tmp

    cd ../FA
    preaffine=""
    if [ -f target_to_MNI152.mat ] ; then
	$FSLDIR/bin/convert_xfm -omat MNI152_to_target.mat -inverse target_to_MNI152.mat
	preaffine="--premat=MNI152_to_target.mat"
    fi

    cd ../FA
    list=`$FSLDIR/bin/imglob *_FA.*`
    echo list of original images = $list
    target=`cat best.msf`
    echo original target = $target

    for g in $list ; do
	echo "processing ${g}:"
	nextvol=`$FSLDIR/bin/imglob ../stats/${IN}_to_all_FA_tmp0* | awk '{print $1}'`
	warp=${g}_to_${target}_warp
	if [ `$FSLDIR/bin/imtest ${warp}_inv` = 0 ] ; then
	    $FSLDIR/bin/invwarp -w $warp -o ${warp}_inv -r $g
	fi

	if [ $interp != "tri" ] ; then

	    maxn=`${FSLDIR}/bin/fslstats $nextvol -R | awk '{print "0 k " $2 " 0.5 + 1 / p" }' | dc - `
	    echo "max label value = $maxn"
	    i=1
	    while [ $i -le $maxn ] ; do
		echo processing label $i
		nextout=${nextvol}_split_`${FSLDIR}/bin/zeropad $i 5`
		${FSLDIR}/bin/fslmaths $nextvol -thr $i -uthr $i -bin $nextout
		${FSLDIR}/bin/applywarp -i $nextout -o $nextout -r $g -w ${warp}_inv --rel $preaffine -d float -s --superlevel=a
		i=`echo "$i 1 + p" | dc -`
	    done
	    echo "combining across label values"
	    ${FSLDIR}/bin/fslmerge -t ${g}_${IN} `${FSLDIR}/bin/imglob ${nextvol}_split_*`
	    ${FSLDIR}/bin/fslmaths ${g}_${IN} -thr 0.1 -Tmax -bin $nextvol
	    ${FSLDIR}/bin/fslmaths ${g}_${IN} -thr 0.1 -Tmaxn -add 1 -mas $nextvol ${g}_${IN}

	else
	    $FSLDIR/bin/applywarp -i $nextvol -o ../stats/${g}_${IN} -r $g -w ${warp}_inv --rel $preaffine -d float -s --superlevel=a
	fi

	$FSLDIR/bin/imrm $nextvol ${nextvol}_split*
    done    

fi

exit 0

