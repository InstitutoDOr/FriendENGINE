#!/bin/sh

#   feat_gm_prepare - take structurals and prepare GM-density-based higher-level FEAT confound regressor
#
#   Stephen Smith, FMRIB Image Analysis Group
#
#   Copyright (C) 2008 University of Oxford
#
#   Part of FSL - FMRIB's Software Library
#   http://www.fmrib.ox.ac.uk/fsl
#   fsl@fmrib.ox.ac.uk
#   
#   Developed at FMRIB (Oxford Centre for Functional Magnetic Resonance
#   Imaging of the Brain), Department of Clinical Neurology, Oxford
#   University, Oxford, UK
#   
#   
#   LICENCE
#   
#   FMRIB Software Library, Release 4.0 (c) 2007, The University of
#   Oxford (the "Software")
#   
#   The Software remains the property of the University of Oxford ("the
#   University").
#   
#   The Software is distributed "AS IS" under this Licence solely for
#   non-commercial use in the hope that it will be useful, but in order
#   that the University as a charitable foundation protects its assets for
#   the benefit of its educational and research purposes, the University
#   makes clear that no condition is made or to be implied, nor is any
#   warranty given or to be implied, as to the accuracy of the Software,
#   or that it will be suitable for any particular purpose or for use
#   under any specific conditions. Furthermore, the University disclaims
#   all responsibility for the use which is made of the Software. It
#   further disclaims any liability for the outcomes arising from using
#   the Software.
#   
#   The Licensee agrees to indemnify the University and hold the
#   University harmless from and against any and all claims, damages and
#   liabilities asserted by third parties (including claims for
#   negligence) which arise directly or indirectly from the use of the
#   Software or the sale of any products based on the Software.
#   
#   No part of the Software may be reproduced, modified, transmitted or
#   transferred in any form or by any means, electronic or mechanical,
#   without the express permission of the University. The permission of
#   the University is not required if the said reproduction, modification,
#   transmission or transference is done without financial return, the
#   conditions of this Licence are imposed upon the receiver of the
#   product, and all original and amended source code is included in any
#   transmitted product. You may be held legally responsible for any
#   copyright infringement that is caused or encouraged by your failure to
#   abide by these terms and conditions.
#   
#   You are not permitted under this Licence to use this Software
#   commercially. Use for which any financial return is received shall be
#   defined as commercial use, and includes (1) integration of all or part
#   of the source code or the Software into a product for sale or license
#   by or on behalf of Licensee to third parties or (2) use of the
#   Software or any derivative of it for research with the final aim of
#   developing software products for sale or license to a third party or
#   (3) use of the Software or any derivative of it for research with the
#   final aim of developing non-software products for sale or license to a
#   third party, or (4) use of the Software to provide any service to an
#   external organisation for which payment is received. If you are
#   interested in using the Software commercially, please contact Isis
#   Innovation Limited ("Isis"), the technology transfer company of the
#   University, to negotiate a licence. Contact details are:
#   innovation@isis.ox.ac.uk quoting reference DE/1112.


#  -> find all _original_ brain-extracted structurals (outside FEAT directories)
#     -> run FAST and keep GM only
#  -> find warp files from FEAT directories and apply to GM
#  -> concatenate -> 4D -> demean

Usage() {
    echo "Usage: feat_gm_prepare <4D-GM-output> <list of first-level FEAT output directories>"
    echo "Note: these all have to have had registration completed in them"
    exit 1
}

[ "$2" = "" ] && Usage

OUT=`${FSLDIR}/bin/remove_ext $1`
shift

# estimate how much we will need to smooth the structurals by, in the end
echo Estimating smoothness of functional data...
func_smoothing=`grep "fmri(smooth)" $1/design.fsf | tail -n 1 | awk '{print $3}'`
standard_space_resolution=`${FSLDIR}/bin/fslval $1/reg/standard pixdim1`
struc_smoothing=`${FSLDIR}/bin/match_smoothing $1/example_func $func_smoothing $1/reg/highres $standard_space_resolution`
echo Structural-space GM PVE images will be smoothed by sigma=${struc_smoothing}mm to match the standard-space functional data

# run segmentations, smoothing, and standard-space transformation
CWD=`pwd`
/bin/rm -rf ${OUT}.log
mkdir ${OUT}.log
for f in $@ ; do
  printf "cd ${f}/reg; $FSLDIR/bin/fast -R 0.3 -H 0.1 -o grot highres; $FSLDIR/bin/immv grot_pve_2 highresGM; /bin/rm grot*; $FSLDIR/bin/fslmaths highresGM -s $struc_smoothing highresGMs; " >> ${OUT}.log/featseg1
  if [ `${FSLDIR}/bin/imtest ${f}/reg/highres2standard_warp` = 1 ] ; then
      printf "${FSLDIR}/bin/applywarp --ref=standard --in=highresGMs --out=highresGMs2standard --warp=highres2standard_warp; " >> ${OUT}.log/featseg1
  else
      printf "${FSLDIR}/bin/flirt -in highresGMs -out highresGMs2standard -ref standard -applyxfm -init highres2standard.mat; " >> ${OUT}.log/featseg1
  fi 
  echo "cd $CWD" >> ${OUT}.log/featseg1
  GMlist="$GMlist ${f}/reg/highresGMs2standard"
done
chmod a+x ${OUT}.log/featseg1
echo Running segmentations...
featseg1_id=`$FSLDIR/bin/fsl_sub -T 30 -N featseg1 -l ./${OUT}.log -t ./${OUT}.log/featseg1`

# concatenate and de-mean GM images
echo "${FSLDIR}/bin/fslmerge -t $OUT $GMlist; ${FSLDIR}/bin/fslmaths $OUT -Tmean -mul -1 -add $OUT $OUT" > ${OUT}.log/featseg2
echo Running concatenation of all standard space GM images
$FSLDIR/bin/fsl_sub -T 10 -N featseg2 -l ./${OUT}.log -j $featseg1_id -t ./${OUT}.log/featseg2 > /dev/null

echo "Once this is all complete you may want to add additional smoothing to $OUT in order to ameliorate possible effects of mis-registrations between functional and structural data, and to lessen the effect of the additional confound regressors"

