#!/bin/sh

#   siena_flow2std - warp flow image into standard space
#
#   Stephen Smith, FMRIB Image Analysis Group
#
#   Copyright (C) 2002-2007 University of Oxford
#
#   Part of FSL - FMRIB's Software Library
#   http://www.fmrib.ox.ac.uk/fsl
#   fsl@fmrib.ox.ac.uk
#   
#   Developed at FMRIB (Oxford Centre for Functional Magnetic Resonance
#   Imaging of the Brain), Department of Clinical Neurology, Oxford
#   University, Oxford, UK
#   
#   
#   LICENCE
#   
#   FMRIB Software Library, Release 4.0 (c) 2007, The University of
#   Oxford (the "Software")
#   
#   The Software remains the property of the University of Oxford ("the
#   University").
#   
#   The Software is distributed "AS IS" under this Licence solely for
#   non-commercial use in the hope that it will be useful, but in order
#   that the University as a charitable foundation protects its assets for
#   the benefit of its educational and research purposes, the University
#   makes clear that no condition is made or to be implied, nor is any
#   warranty given or to be implied, as to the accuracy of the Software,
#   or that it will be suitable for any particular purpose or for use
#   under any specific conditions. Furthermore, the University disclaims
#   all responsibility for the use which is made of the Software. It
#   further disclaims any liability for the outcomes arising from using
#   the Software.
#   
#   The Licensee agrees to indemnify the University and hold the
#   University harmless from and against any and all claims, damages and
#   liabilities asserted by third parties (including claims for
#   negligence) which arise directly or indirectly from the use of the
#   Software or the sale of any products based on the Software.
#   
#   No part of the Software may be reproduced, modified, transmitted or
#   transferred in any form or by any means, electronic or mechanical,
#   without the express permission of the University. The permission of
#   the University is not required if the said reproduction, modification,
#   transmission or transference is done without financial return, the
#   conditions of this Licence are imposed upon the receiver of the
#   product, and all original and amended source code is included in any
#   transmitted product. You may be held legally responsible for any
#   copyright infringement that is caused or encouraged by your failure to
#   abide by these terms and conditions.
#   
#   You are not permitted under this Licence to use this Software
#   commercially. Use for which any financial return is received shall be
#   defined as commercial use, and includes (1) integration of all or part
#   of the source code or the Software into a product for sale or license
#   by or on behalf of Licensee to third parties or (2) use of the
#   Software or any derivative of it for research with the final aim of
#   developing software products for sale or license to a third party or
#   (3) use of the Software or any derivative of it for research with the
#   final aim of developing non-software products for sale or license to a
#   third party, or (4) use of the Software to provide any service to an
#   external organisation for which payment is received. If you are
#   interested in using the Software commercially, please contact Isis
#   Innovation Limited ("Isis"), the technology transfer company of the
#   University, to negotiate a licence. Contact details are:
#   innovation@isis.ox.ac.uk quoting reference DE/1112.


Usage() {
    echo ""
    echo "Usage: siena_flow2std <fileroot2> <fileroot2> [options]"
    echo ""
    echo "-s <sigma> : spatial smoothing of standard-space edge-flow image, sigma (HWHM) in mm (default=5)"
    echo "-d         : debug (don't delete intermediate files)"
    echo ""
    exit 1
}

if [ _$FSLDIR = _ ] ; then
    FSLDIR=/usr/local/fsl
    export FSLDIR
fi

[ "$2" = "" ] && Usage
[ `${FSLDIR}/bin/imtest $1` = 0 ] && Usage
[ `${FSLDIR}/bin/imtest $2` = 0 ] && Usage
A=`${FSLDIR}/bin/remove_ext $1`
B=`${FSLDIR}/bin/remove_ext $2`
shift 2

debug=0
smooth=5
while [ _$1 != _ ] ; do
    if [ $1 = -d ] ; then
        debug=1
	shift
    elif [ $1 = -s ] ; then
        smooth=$2
        shift 2
    else
        Usage
    fi
done

# register to MNI152 if not already done, and create halfway2std transform
if [ ! -f ${A}_to_std.mat ] ; then
    if [ `${FSLDIR}/bin/imtest ${A}_brain` = 0 ] ; then
	${FSLDIR}/bin/bet $A ${A}_brain
    fi
    ${FSLDIR}/bin/flirt -ref ${FSLDIR}/data/standard/MNI152_T1_2mm_brain -in ${A}_brain -omat ${A}_to_std.mat -o ${A}_to_std
fi
${FSLDIR}/bin/convert_xfm -omat ${A}_halfwayto_${B}_inv.mat -inverse ${A}_halfwayto_${B}.mat
${FSLDIR}/bin/convert_xfm -omat ${A}_halfwayto_${B}_to_std.mat -concat ${A}_to_std.mat ${A}_halfwayto_${B}_inv.mat

# dilate flow image, -> standard space -> mask with ss edge image -> blur -> remask
${FSLDIR}/bin/fslmaths ${A}_to_${B}_flow -dilM -dilM -dilM -dilM -dilM -dilM -dilM -dilM -dilM -dilM -dilM -dilM -dilM -dilM ${A}_to_${B}_flow_dil
${FSLDIR}/bin/fslmaths ${B}_to_${A}_flow -dilM -dilM -dilM -dilM -dilM -dilM -dilM -dilM -dilM -dilM -dilM -dilM -dilM -dilM ${A}_to_${B}_flow_dilback
${FSLDIR}/bin/flirt -in ${A}_to_${B}_flow_dil     -ref ${FSLDIR}/data/standard/MNI152_T1_2mm_brain -out ${A}_to_${B}_flow_dil     -applyxfm -init ${A}_halfwayto_${B}_to_std.mat
${FSLDIR}/bin/flirt -in ${A}_to_${B}_flow_dilback -ref ${FSLDIR}/data/standard/MNI152_T1_2mm_brain -out ${A}_to_${B}_flow_dilback -applyxfm -init ${A}_halfwayto_${B}_to_std.mat
${FSLDIR}/bin/fslmaths ${A}_to_${B}_flow_dil -sub ${A}_to_${B}_flow_dilback -div 2 -mas ${FSLDIR}/data/standard/MNI152_T1_2mm_edges ${A}_to_${B}_flow_to_std

if [ $smooth != 0 ] ; then
    ${FSLDIR}/bin/fslmaths ${FSLDIR}/data/standard/MNI152_T1_2mm_edges -bin -s $smooth ${A}_masksmooth -odt float
    ${FSLDIR}/bin/fslmaths ${A}_to_${B}_flow_to_std -s $smooth -div ${A}_masksmooth -mas ${FSLDIR}/data/standard/MNI152_T1_2mm_edges ${A}_to_${B}_flow_to_std
fi

# cleanup
if [ $debug = 0 ] ; then
    $FSLDIR/bin/imrm ${A}_masksmooth ${A}_brain ${A}_to_${B}_flow_dil ${A}_to_${B}_flow_dilback ${A}_to_std
    /bin/rm -f ${A}_halfwayto_${B}_inv.mat
fi

