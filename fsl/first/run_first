#!/bin/sh

#   run_flirt - wrapper script for "first", the main FIRST fitting
#
#   Brian Patenaude and Matthew Webster, FMRIB Image Analysis Group
#
#   Copyright (C) 2006-2009 University of Oxford
#
#   Part of FSL - FMRIB's Software Library
#   http://www.fmrib.ox.ac.uk/fsl
#   fsl@fmrib.ox.ac.uk
#   
#   Developed at FMRIB (Oxford Centre for Functional Magnetic Resonance
#   Imaging of the Brain), Department of Clinical Neurology, Oxford
#   University, Oxford, UK
#   
#   
#   LICENCE
#   
#   FMRIB Software Library, Release 4.0 (c) 2007, The University of
#   Oxford (the "Software")
#   
#   The Software remains the property of the University of Oxford ("the
#   University").
#   
#   The Software is distributed "AS IS" under this Licence solely for
#   non-commercial use in the hope that it will be useful, but in order
#   that the University as a charitable foundation protects its assets for
#   the benefit of its educational and research purposes, the University
#   makes clear that no condition is made or to be implied, nor is any
#   warranty given or to be implied, as to the accuracy of the Software,
#   or that it will be suitable for any particular purpose or for use
#   under any specific conditions. Furthermore, the University disclaims
#   all responsibility for the use which is made of the Software. It
#   further disclaims any liability for the outcomes arising from using
#   the Software.
#   
#   The Licensee agrees to indemnify the University and hold the
#   University harmless from and against any and all claims, damages and
#   liabilities asserted by third parties (including claims for
#   negligence) which arise directly or indirectly from the use of the
#   Software or the sale of any products based on the Software.
#   
#   No part of the Software may be reproduced, modified, transmitted or
#   transferred in any form or by any means, electronic or mechanical,
#   without the express permission of the University. The permission of
#   the University is not required if the said reproduction, modification,
#   transmission or transference is done without financial return, the
#   conditions of this Licence are imposed upon the receiver of the
#   product, and all original and amended source code is included in any
#   transmitted product. You may be held legally responsible for any
#   copyright infringement that is caused or encouraged by your failure to
#   abide by these terms and conditions.
#   
#   You are not permitted under this Licence to use this Software
#   commercially. Use for which any financial return is received shall be
#   defined as commercial use, and includes (1) integration of all or part
#   of the source code or the Software into a product for sale or license
#   by or on behalf of Licensee to third parties or (2) use of the
#   Software or any derivative of it for research with the final aim of
#   developing software products for sale or license to a third party or
#   (3) use of the Software or any derivative of it for research with the
#   final aim of developing non-software products for sale or license to a
#   third party, or (4) use of the Software to provide any service to an
#   external organisation for which payment is received. If you are
#   interested in using the Software commercially, please contact Isis
#   Innovation Limited ("Isis"), the technology transfer company of the
#   University, to negotiate a licence. Contact details are:
#   innovation@isis.ox.ac.uk quoting reference DE/1112.

Usage() {
    echo ""
    echo "Usage:   run_first -i <input_image> -t <input_to_mni.mat> -n <N-modes> -o <output_basename> -m <model_name> [options]"
    echo ""
    echo "-v                   : verbose"
    echo "-intref <model_name> : reference structure for the local intensity normalization"
    echo "-loadBvars <bvars>   : initializes FIRST with a previous estimate of the structure"
    echo "-multipleImages : run first on multiple images, need to provide a list of images, transformation matrices, and output names"
	echo "-wfnirt <warp_field> : use FNIRT warp field instead of linear transformation matrix"
    echo ""
    echo "e.g.:  run_first -i im1 -t im1_to_mni.mat -n 60 -o output_name -m ${FSLDIR}/data/first/models_317_bin/L_Hipp_bin.bmv"
    echo ""
    exit 1
}

debug=0
required=0
useMultiImage=0
while [ _$1 != _ ] ; do

    if [ $1 = -v ] ; then
        verbose=-v
        shift
    elif [ $1 = -m ] ; then
	required=`echo $required + 1 | bc`
	model=$2
	shift 2
    elif [ $1 = -t ] ; then
	required=`echo $required + 1 | bc`
	trmat=$2
	shift 2
    elif [ $1 = -i ] ; then
	required=`echo $required + 1 | bc`
	image=`${FSLDIR}/bin/remove_ext $2`
	shift 2
    elif [ $1 = -n ] ; then
	required=`echo $required + 1 | bc`
	modes=$2
	shift 2
    elif [ $1 = -intref ] ; then
	comExtras="$comExtras --intref -p $2" 
	shift 2
    elif [ $1 = -loadBvars ] ; then
	comExtras="$comExtras --loadbvars -o $2"
	shift 2
    elif [ $1 = -shcond ] ; then
	comExtras="$comExtras --shcond -b $2"
	shift 2
	elif [ $1 = -wfnirt ] ; then
	comExtras="$comExtras --useFNIRT_warpField -w $2"
	shift 2
    elif [ $1 = -o ] ; then
	required=`echo $required + 1 | bc`
	outname=$2
	shift 2
	elif [ $1 = -multipleImages ] ; then
	useMultiImage=1
	shift 1
    else
	Usage
    fi
done

if [ $useMultiImage -eq 1 ] ; then 
		[ ! -f $image ] && Usage
	[ ${required} -ne 4 ] && Usage

else
[ `${FSLDIR}/bin/imtest $image` = 0 ] && Usage
[ ${required} -ne 5 ] && Usage

if [ ! -f ${trmat} ] ; then
    echo "linear transformation matrix file not found"
    exit 1
fi


fi 


if [ ! -f ${model} ] ; then
    echo "model file not found"
    exit 1
fi




if [ $useMultiImage -eq 1 ] ; then 

	${FSLDIR}/bin/first -i $image -l dummy -m $model -k $outname -n $modes  $verbose $comExtras  --multiImageInput --binarySurfaceOutput
else
	 ${FSLDIR}/bin/first -i $image -l $trmat -m $model -k $outname -n $modes  $verbose $comExtras --binarySurfaceOutput
fi;
